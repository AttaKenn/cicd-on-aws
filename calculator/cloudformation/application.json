{
    "Description": "This CloudFormation json template sets up the simple calculator application on an AutoScaling group, behind an Application Load Balancer using a CodeDeploy application.",
    "Parameters": {
        "SharedResourceStack": {
            "Description": "Name of an active CloudFormation stack that contains shared resources, such as the VPC.",
            "Type": "String",
            "MinLength": 1,
            "MaxLength": 255,
            "AllowedPattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
            "Default": "shared-resources"
        },
        "Stage": {
            "Description": "Release stage",
            "Type": "String",
            "MinLength": 1,
            "MaxLength": 255,
            "AllowedPattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
            "Default": "Prod"
        },
        "CPUPolicyTargetValue": {
            "Type": "String",
            "Description": "The target utilization for the CPU metric",
            "Default": 80
        },
        "ALBRequestCountTargetValue": {
            "Type": "String",
            "Description": "The optimal average request count per instance during any one-minute interval",
            "Default": 200
        }
    },
    "Resources": {
        "DeploymentGroup": {
            "Type": "AWS::CodeDeploy::DeploymentGroup",
            "Properties": {
                "DeploymentGroupName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "DeploymentGroup"
                        ]
                    ]
                },
                "ApplicationName": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${SharedResourceStack}:CodeDeployApplication"
                    }
                },
                "ServiceRoleArn": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${SharedResourceStack}:CodeDeployRole"
                    }
                },
                "DeploymentConfigName": "CodeDeployDefault.AllAtOnce",
                "AutoScalingGroups": [
                    {
                        "Ref": "AutoScalingGroup"
                    }
                ]
            }
        },
        "AutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "HealthCheckType": "ELB",
                "HealthCheckGracePeriod": 300,
                "MinSize": 1,
                "MaxSize": 3,
                "DefaultInstanceWarmup": 30,
                "LaunchConfigurationName": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${SharedResourceStack}:LaunchConfig"
                    }
                },
                "VPCZoneIdentifier": {
                    "Fn::Split": [
                        ",",
                        {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${SharedResourceStack}:PrivateSubnets"
                            }
                        }
                    ]
                },
                "TargetGroupARNs": [
                    {
                        "Ref": "LoadBalancerTargetGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Fn::ImportValue": {
                                            "Fn::Sub": "${SharedResourceStack}:ApplicationName"
                                        }
                                    },
                                    {
                                        "Ref": "Stage"
                                    }
                                ]
                            ]
                        },
                        "PropagateAtLaunch": true
                    }
                ]
            }
        },
        "CPUPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "AutoScalingGroup"
                },
                "PolicyType": "TargetTrackingScaling",
                "TargetTrackingConfiguration": {
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "ASGAverageCPUUtilization"
                    },
                    "TargetValue": {
                        "Ref": "CPUPolicyTargetValue"
                    }
                }
            }
        },
        "ALBRequestCountPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "DependsOn": [
                "LoadBalancerListener"
            ],
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "AutoScalingGroup"
                },
                "PolicyType": "TargetTrackingScaling",
                "TargetTrackingConfiguration": {
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "ALBRequestCountPerTarget",
                        "ResourceLabel": {
                            "Fn::Join": [
                                "/",
                                [
                                    {
                                        "Fn::GetAtt": [
                                            "LoadBalancer",
                                            "LoadBalancerFullName"
                                        ]
                                    },
                                    {
                                        "Fn::GetAtt": [
                                            "LoadBalancerTargetGroup",
                                            "TargetGroupFullName"
                                        ]
                                    }
                                ]
                            ]
                        }
                    },
                    "TargetValue": {
                        "Ref": "ALBRequestCountTargetValue"
                    }
                }
            }
        },
        "LoadBalancerListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "LoadBalancerTargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "LoadBalancer"
                },
                "Port": 80,
                "Protocol": "HTTP"
            }
        },
        "LoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Scheme": "internet-facing",
                "Subnets": {
                    "Fn::Split": [
                        ",",
                        {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${SharedResourceStack}:PublicSubnets"
                            }
                        }
                    ]
                },
                "SecurityGroups": [
                    {
                        "Fn::ImportValue": {
                            "Fn::Sub": "${SharedResourceStack}:PublicHttpIngressSecurityGroup"
                        }
                    }
                ]
            }
        },
        "LoadBalancerTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckIntervalSeconds": 30,
                "UnhealthyThresholdCount": 2,
                "HealthyThresholdCount": 2,
                "Port": 8080,
                "Protocol": "HTTP",
                "VpcId": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${SharedResourceStack}:VPC"
                    }
                }
            }
        }
    },
    "Outputs": {
        "Url": {
            "Description": "Calculator application URL",
            "Value": {
                "Fn::Sub": "http://${LoadBalancer.DNSName}"
            }
        },
        "DeploymentGroup": {
            "Description": "Calculator application deployment group",
            "Value": {
                "Ref": "DeploymentGroup"
            }
        }
    }
}